// source: share/share.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.FileShare', null, global);
goog.exportSymbol('proto.services.ShareSaveRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileShare = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.FileShare, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileShare.displayName = 'proto.services.FileShare';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ShareSaveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ShareSaveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ShareSaveRequest.displayName = 'proto.services.ShareSaveRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileShare.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileShare.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileShare} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileShare.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    flag: jspb.Message.getFieldWithDefault(msg, 7, 0),
    passwordenabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    password: jspb.Message.getFieldWithDefault(msg, 9, ""),
    expireenabled: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    expire: jspb.Message.getFieldWithDefault(msg, 11, 0),
    copycount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    copycountlimit: jspb.Message.getFieldWithDefault(msg, 13, 0),
    copycountenabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    status: jspb.Message.getFieldWithDefault(msg, 15, 0),
    username: jspb.Message.getFieldWithDefault(msg, 16, ""),
    weburl: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileShare}
 */
proto.services.FileShare.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileShare;
  return proto.services.FileShare.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileShare} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileShare}
 */
proto.services.FileShare.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPasswordenabled(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpireenabled(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpire(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCopycount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCopycountlimit(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCopycountenabled(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeburl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileShare.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileShare.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileShare} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileShare.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPasswordenabled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExpireenabled();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getExpire();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getCopycount();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getCopycountlimit();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCopycountenabled();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getWeburl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.FileShare.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.FileShare.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string mime = 3;
 * @return {string}
 */
proto.services.FileShare.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setMime = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 userIdentity = 4;
 * @return {number}
 */
proto.services.FileShare.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setUseridentity = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 ctime = 5;
 * @return {number}
 */
proto.services.FileShare.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setCtime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.services.FileShare.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 flag = 7;
 * @return {number}
 */
proto.services.FileShare.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setFlag = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool passwordEnabled = 8;
 * @return {boolean}
 */
proto.services.FileShare.prototype.getPasswordenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.services.FileShare.prototype.setPasswordenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string password = 9;
 * @return {string}
 */
proto.services.FileShare.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool expireEnabled = 10;
 * @return {boolean}
 */
proto.services.FileShare.prototype.getExpireenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.services.FileShare.prototype.setExpireenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int64 expire = 11;
 * @return {number}
 */
proto.services.FileShare.prototype.getExpire = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setExpire = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 copyCount = 12;
 * @return {number}
 */
proto.services.FileShare.prototype.getCopycount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setCopycount = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 copyCountLimit = 13;
 * @return {number}
 */
proto.services.FileShare.prototype.getCopycountlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setCopycountlimit = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool copyCountEnabled = 14;
 * @return {boolean}
 */
proto.services.FileShare.prototype.getCopycountenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.services.FileShare.prototype.setCopycountenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional int32 status = 15;
 * @return {number}
 */
proto.services.FileShare.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.services.FileShare.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string userName = 16;
 * @return {string}
 */
proto.services.FileShare.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string webURL = 17;
 * @return {string}
 */
proto.services.FileShare.prototype.getWeburl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.services.FileShare.prototype.setWeburl = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ShareSaveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ShareSaveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ShareSaveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ShareSaveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    savepath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    saveidentity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ShareSaveRequest}
 */
proto.services.ShareSaveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ShareSaveRequest;
  return proto.services.ShareSaveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ShareSaveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ShareSaveRequest}
 */
proto.services.ShareSaveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSavepath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaveidentity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ShareSaveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ShareSaveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ShareSaveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ShareSaveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSavepath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSaveidentity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.ShareSaveRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.ShareSaveRequest.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 userIdentity = 2;
 * @return {number}
 */
proto.services.ShareSaveRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.ShareSaveRequest.prototype.setUseridentity = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string savePath = 3;
 * @return {string}
 */
proto.services.ShareSaveRequest.prototype.getSavepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.ShareSaveRequest.prototype.setSavepath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string saveIdentity = 4;
 * @return {string}
 */
proto.services.ShareSaveRequest.prototype.getSaveidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.services.ShareSaveRequest.prototype.setSaveidentity = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.services.ShareSaveRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.services.ShareSaveRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.services);
