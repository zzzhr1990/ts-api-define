// source: ext/video.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.PreviewInfo', null, global);
goog.exportSymbol('proto.services.VideoExt', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.VideoExt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.VideoExt.repeatedFields_, null);
};
goog.inherits(proto.services.VideoExt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.VideoExt.displayName = 'proto.services.VideoExt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PreviewInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PreviewInfo.repeatedFields_, null);
};
goog.inherits(proto.services.PreviewInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PreviewInfo.displayName = 'proto.services.PreviewInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.VideoExt.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.VideoExt.prototype.toObject = function(opt_includeInstance) {
  return proto.services.VideoExt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.VideoExt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.VideoExt.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    encoder: jspb.Message.getFieldWithDefault(msg, 4, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 5, 0),
    width: jspb.Message.getFieldWithDefault(msg, 6, 0),
    height: jspb.Message.getFieldWithDefault(msg, 7, 0),
    maxpreviewwidth: jspb.Message.getFieldWithDefault(msg, 8, 0),
    maxpreviewheight: jspb.Message.getFieldWithDefault(msg, 9, 0),
    previewimagekeyList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    previewkey: jspb.Message.getFieldWithDefault(msg, 11, ""),
    previewtype: jspb.Message.getFieldWithDefault(msg, 12, 0),
    previewpid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    previewplaykey: jspb.Message.getFieldWithDefault(msg, 14, ""),
    status: jspb.Message.getFieldWithDefault(msg, 15, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 16, 0),
    createtime: jspb.Message.getFieldWithDefault(msg, 17, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.VideoExt}
 */
proto.services.VideoExt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.VideoExt;
  return proto.services.VideoExt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.VideoExt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.VideoExt}
 */
proto.services.VideoExt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncoder(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxpreviewwidth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxpreviewheight(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addPreviewimagekey(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewkey(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPreviewtype(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewpid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewplaykey(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.VideoExt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.VideoExt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.VideoExt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.VideoExt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEncoder();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMaxpreviewwidth();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMaxpreviewheight();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getPreviewimagekeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getPreviewkey();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPreviewtype();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPreviewpid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPreviewplaykey();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.services.VideoExt.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setHash = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.VideoExt.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.services.VideoExt.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string encoder = 4;
 * @return {string}
 */
proto.services.VideoExt.prototype.getEncoder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setEncoder = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 duration = 5;
 * @return {number}
 */
proto.services.VideoExt.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 width = 6;
 * @return {number}
 */
proto.services.VideoExt.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 height = 7;
 * @return {number}
 */
proto.services.VideoExt.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 maxPreviewWidth = 8;
 * @return {number}
 */
proto.services.VideoExt.prototype.getMaxpreviewwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setMaxpreviewwidth = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 maxPreviewHeight = 9;
 * @return {number}
 */
proto.services.VideoExt.prototype.getMaxpreviewheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setMaxpreviewheight = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string previewImageKey = 10;
 * @return {!Array<string>}
 */
proto.services.VideoExt.prototype.getPreviewimagekeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.services.VideoExt.prototype.setPreviewimagekeyList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.services.VideoExt.prototype.addPreviewimagekey = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.VideoExt.prototype.clearPreviewimagekeyList = function() {
  this.setPreviewimagekeyList([]);
};


/**
 * optional string previewKey = 11;
 * @return {string}
 */
proto.services.VideoExt.prototype.getPreviewkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setPreviewkey = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 previewType = 12;
 * @return {number}
 */
proto.services.VideoExt.prototype.getPreviewtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setPreviewtype = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string previewPID = 13;
 * @return {string}
 */
proto.services.VideoExt.prototype.getPreviewpid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setPreviewpid = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string previewPlayKey = 14;
 * @return {string}
 */
proto.services.VideoExt.prototype.getPreviewplaykey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.services.VideoExt.prototype.setPreviewplaykey = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 status = 15;
 * @return {number}
 */
proto.services.VideoExt.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 flag = 16;
 * @return {number}
 */
proto.services.VideoExt.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setFlag = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 createTime = 17;
 * @return {number}
 */
proto.services.VideoExt.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 updateTime = 18;
 * @return {number}
 */
proto.services.VideoExt.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.services.VideoExt.prototype.setUpdatetime = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.PreviewInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PreviewInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PreviewInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PreviewInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreviewInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    width: jspb.Message.getFieldWithDefault(msg, 3, 0),
    height: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sourceidentity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourcepath: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sourcesize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    previewimageaddressList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    previewhlsaddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PreviewInfo}
 */
proto.services.PreviewInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PreviewInfo;
  return proto.services.PreviewInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PreviewInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PreviewInfo}
 */
proto.services.PreviewInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceidentity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcepath(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSourcesize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addPreviewimageaddress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewhlsaddress(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PreviewInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PreviewInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PreviewInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreviewInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSourceidentity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourcepath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSourcesize();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPreviewimageaddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getPreviewhlsaddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.services.PreviewInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.PreviewInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 duration = 2;
 * @return {number}
 */
proto.services.PreviewInfo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.PreviewInfo.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 width = 3;
 * @return {number}
 */
proto.services.PreviewInfo.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.services.PreviewInfo.prototype.setWidth = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 height = 4;
 * @return {number}
 */
proto.services.PreviewInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.services.PreviewInfo.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string sourceIdentity = 5;
 * @return {string}
 */
proto.services.PreviewInfo.prototype.getSourceidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.services.PreviewInfo.prototype.setSourceidentity = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sourcePath = 6;
 * @return {string}
 */
proto.services.PreviewInfo.prototype.getSourcepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.services.PreviewInfo.prototype.setSourcepath = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 sourceSize = 7;
 * @return {number}
 */
proto.services.PreviewInfo.prototype.getSourcesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.services.PreviewInfo.prototype.setSourcesize = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated string previewImageAddress = 8;
 * @return {!Array<string>}
 */
proto.services.PreviewInfo.prototype.getPreviewimageaddressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.services.PreviewInfo.prototype.setPreviewimageaddressList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.services.PreviewInfo.prototype.addPreviewimageaddress = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.PreviewInfo.prototype.clearPreviewimageaddressList = function() {
  this.setPreviewimageaddressList([]);
};


/**
 * optional string previewHlsAddress = 9;
 * @return {string}
 */
proto.services.PreviewInfo.prototype.getPreviewhlsaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.services.PreviewInfo.prototype.setPreviewhlsaddress = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 status = 10;
 * @return {number}
 */
proto.services.PreviewInfo.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.services.PreviewInfo.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


goog.object.extend(exports, proto.services);
