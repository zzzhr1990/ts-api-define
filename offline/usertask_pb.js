// source: offline/usertask.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.AddUserTaskRequest', null, global);
goog.exportSymbol('proto.services.DeleteUserTaskRequest', null, global);
goog.exportSymbol('proto.services.ListUserTaskRequest', null, global);
goog.exportSymbol('proto.services.UserTask', null, global);
goog.exportSymbol('proto.services.UserTaskFilterRequest', null, global);
goog.exportSymbol('proto.services.UserTaskList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.AddUserTaskRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.AddUserTaskRequest.repeatedFields_, null);
};
goog.inherits(proto.services.AddUserTaskRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.AddUserTaskRequest.displayName = 'proto.services.AddUserTaskRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.UserTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserTask.displayName = 'proto.services.UserTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ListUserTaskRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.ListUserTaskRequest.repeatedFields_, null);
};
goog.inherits(proto.services.ListUserTaskRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ListUserTaskRequest.displayName = 'proto.services.ListUserTaskRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.DeleteUserTaskRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DeleteUserTaskRequest.repeatedFields_, null);
};
goog.inherits(proto.services.DeleteUserTaskRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.DeleteUserTaskRequest.displayName = 'proto.services.DeleteUserTaskRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserTaskList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserTaskList.repeatedFields_, null);
};
goog.inherits(proto.services.UserTaskList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserTaskList.displayName = 'proto.services.UserTaskList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserTaskFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserTaskFilterRequest.repeatedFields_, null);
};
goog.inherits(proto.services.UserTaskFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserTaskFilterRequest.displayName = 'proto.services.UserTaskFilterRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.AddUserTaskRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.AddUserTaskRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.AddUserTaskRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.AddUserTaskRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.AddUserTaskRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.UserTask.toObject, includeInstance),
    savePath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    saveIdentity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createAddress: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.AddUserTaskRequest}
 */
proto.services.AddUserTaskRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.AddUserTaskRequest;
  return proto.services.AddUserTaskRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.AddUserTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.AddUserTaskRequest}
 */
proto.services.AddUserTaskRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 2:
      var value = new proto.services.UserTask;
      reader.readMessage(value,proto.services.UserTask.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSavePath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaveIdentity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.AddUserTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.AddUserTaskRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.AddUserTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.AddUserTaskRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.UserTask.serializeBinaryToWriter
    );
  }
  f = message.getSavePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSaveIdentity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreateAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 user_identity = 1;
 * @return {number}
 */
proto.services.AddUserTaskRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.AddUserTaskRequest} returns this
 */
proto.services.AddUserTaskRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated UserTask data = 2;
 * @return {!Array<!proto.services.UserTask>}
 */
proto.services.AddUserTaskRequest.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.UserTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserTask, 2));
};


/**
 * @param {!Array<!proto.services.UserTask>} value
 * @return {!proto.services.AddUserTaskRequest} returns this
*/
proto.services.AddUserTaskRequest.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.UserTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserTask}
 */
proto.services.AddUserTaskRequest.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.UserTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.AddUserTaskRequest} returns this
 */
proto.services.AddUserTaskRequest.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional string save_path = 3;
 * @return {string}
 */
proto.services.AddUserTaskRequest.prototype.getSavePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.AddUserTaskRequest} returns this
 */
proto.services.AddUserTaskRequest.prototype.setSavePath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string save_identity = 4;
 * @return {string}
 */
proto.services.AddUserTaskRequest.prototype.getSaveIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.AddUserTaskRequest} returns this
 */
proto.services.AddUserTaskRequest.prototype.setSaveIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string create_address = 5;
 * @return {string}
 */
proto.services.AddUserTaskRequest.prototype.getCreateAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.AddUserTaskRequest} returns this
 */
proto.services.AddUserTaskRequest.prototype.setCreateAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserTask.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskIdentity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    size: jspb.Message.getFieldWithDefault(msg, 7, 0),
    downloadSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    progress: jspb.Message.getFieldWithDefault(msg, 9, 0),
    errorCode: jspb.Message.getFieldWithDefault(msg, 10, 0),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    savePath: jspb.Message.getFieldWithDefault(msg, 12, ""),
    saveIdentity: jspb.Message.getFieldWithDefault(msg, 13, ""),
    accessPath: jspb.Message.getFieldWithDefault(msg, 14, ""),
    accessIdentity: jspb.Message.getFieldWithDefault(msg, 15, ""),
    fileMime: jspb.Message.getFieldWithDefault(msg, 16, ""),
    fileType: jspb.Message.getFieldWithDefault(msg, 17, 0),
    createAddress: jspb.Message.getFieldWithDefault(msg, 18, ""),
    data: jspb.Message.getFieldWithDefault(msg, 19, ""),
    textLink: jspb.Message.getFieldWithDefault(msg, 20, ""),
    fileHash: jspb.Message.getFieldWithDefault(msg, 21, ""),
    op: jspb.Message.getFieldWithDefault(msg, 22, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserTask}
 */
proto.services.UserTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserTask;
  return proto.services.UserTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserTask}
 */
proto.services.UserTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProgress(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrorCode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSavePath(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaveIdentity(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessPath(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessIdentity(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileMime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileType(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateAddress(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextLink(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileHash(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDownloadSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getErrorCode();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSavePath();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSaveIdentity();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAccessPath();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAccessIdentity();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getFileMime();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getFileType();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getCreateAddress();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getTextLink();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getFileHash();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
};


/**
 * optional string task_identity = 1;
 * @return {string}
 */
proto.services.UserTask.prototype.getTaskIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setTaskIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.UserTask.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 create_time = 3;
 * @return {number}
 */
proto.services.UserTask.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.services.UserTask.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 type = 5;
 * @return {number}
 */
proto.services.UserTask.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 status = 6;
 * @return {number}
 */
proto.services.UserTask.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 size = 7;
 * @return {number}
 */
proto.services.UserTask.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 download_size = 8;
 * @return {number}
 */
proto.services.UserTask.prototype.getDownloadSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setDownloadSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 progress = 9;
 * @return {number}
 */
proto.services.UserTask.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 error_code = 10;
 * @return {number}
 */
proto.services.UserTask.prototype.getErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string error_message = 11;
 * @return {string}
 */
proto.services.UserTask.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string save_path = 12;
 * @return {string}
 */
proto.services.UserTask.prototype.getSavePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setSavePath = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string save_identity = 13;
 * @return {string}
 */
proto.services.UserTask.prototype.getSaveIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setSaveIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string access_path = 14;
 * @return {string}
 */
proto.services.UserTask.prototype.getAccessPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setAccessPath = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string access_identity = 15;
 * @return {string}
 */
proto.services.UserTask.prototype.getAccessIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setAccessIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string file_mime = 16;
 * @return {string}
 */
proto.services.UserTask.prototype.getFileMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setFileMime = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 file_type = 17;
 * @return {number}
 */
proto.services.UserTask.prototype.getFileType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setFileType = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string create_address = 18;
 * @return {string}
 */
proto.services.UserTask.prototype.getCreateAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setCreateAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string data = 19;
 * @return {string}
 */
proto.services.UserTask.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string text_link = 20;
 * @return {string}
 */
proto.services.UserTask.prototype.getTextLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setTextLink = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string file_hash = 21;
 * @return {string}
 */
proto.services.UserTask.prototype.getFileHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setFileHash = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int32 op = 22;
 * @return {number}
 */
proto.services.UserTask.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserTask} returns this
 */
proto.services.UserTask.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.ListUserTaskRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ListUserTaskRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ListUserTaskRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ListUserTaskRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListUserTaskRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    listInfo: (f = msg.getListInfo()) && common_common_entity_pb.ListInfo.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    common_common_entity_pb.OrderByRequest.toObject, includeInstance),
    filter: (f = msg.getFilter()) && proto.services.UserTaskFilterRequest.toObject(includeInstance, f),
    op: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ListUserTaskRequest}
 */
proto.services.ListUserTaskRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ListUserTaskRequest;
  return proto.services.ListUserTaskRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ListUserTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ListUserTaskRequest}
 */
proto.services.ListUserTaskRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 2:
      var value = new common_common_entity_pb.ListInfo;
      reader.readMessage(value,common_common_entity_pb.ListInfo.deserializeBinaryFromReader);
      msg.setListInfo(value);
      break;
    case 3:
      var value = new common_common_entity_pb.OrderByRequest;
      reader.readMessage(value,common_common_entity_pb.OrderByRequest.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    case 4:
      var value = new proto.services.UserTaskFilterRequest;
      reader.readMessage(value,proto.services.UserTaskFilterRequest.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ListUserTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ListUserTaskRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ListUserTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListUserTaskRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getListInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_entity_pb.ListInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_common_entity_pb.OrderByRequest.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.services.UserTaskFilterRequest.serializeBinaryToWriter
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 user_identity = 1;
 * @return {number}
 */
proto.services.ListUserTaskRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserTaskRequest} returns this
 */
proto.services.ListUserTaskRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ListInfo list_info = 2;
 * @return {?proto.services.ListInfo}
 */
proto.services.ListUserTaskRequest.prototype.getListInfo = function() {
  return /** @type{?proto.services.ListInfo} */ (
    jspb.Message.getWrapperField(this, common_common_entity_pb.ListInfo, 2));
};


/**
 * @param {?proto.services.ListInfo|undefined} value
 * @return {!proto.services.ListUserTaskRequest} returns this
*/
proto.services.ListUserTaskRequest.prototype.setListInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ListUserTaskRequest} returns this
 */
proto.services.ListUserTaskRequest.prototype.clearListInfo = function() {
  return this.setListInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ListUserTaskRequest.prototype.hasListInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated OrderByRequest order_by = 3;
 * @return {!Array<!proto.services.OrderByRequest>}
 */
proto.services.ListUserTaskRequest.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.services.OrderByRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_common_entity_pb.OrderByRequest, 3));
};


/**
 * @param {!Array<!proto.services.OrderByRequest>} value
 * @return {!proto.services.ListUserTaskRequest} returns this
*/
proto.services.ListUserTaskRequest.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.OrderByRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.OrderByRequest}
 */
proto.services.ListUserTaskRequest.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.OrderByRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.ListUserTaskRequest} returns this
 */
proto.services.ListUserTaskRequest.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};


/**
 * optional UserTaskFilterRequest filter = 4;
 * @return {?proto.services.UserTaskFilterRequest}
 */
proto.services.ListUserTaskRequest.prototype.getFilter = function() {
  return /** @type{?proto.services.UserTaskFilterRequest} */ (
    jspb.Message.getWrapperField(this, proto.services.UserTaskFilterRequest, 4));
};


/**
 * @param {?proto.services.UserTaskFilterRequest|undefined} value
 * @return {!proto.services.ListUserTaskRequest} returns this
*/
proto.services.ListUserTaskRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.ListUserTaskRequest} returns this
 */
proto.services.ListUserTaskRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.ListUserTaskRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 op = 5;
 * @return {number}
 */
proto.services.ListUserTaskRequest.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserTaskRequest} returns this
 */
proto.services.ListUserTaskRequest.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.DeleteUserTaskRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.DeleteUserTaskRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.DeleteUserTaskRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.DeleteUserTaskRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteUserTaskRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    taskIdentityList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.DeleteUserTaskRequest}
 */
proto.services.DeleteUserTaskRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.DeleteUserTaskRequest;
  return proto.services.DeleteUserTaskRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.DeleteUserTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.DeleteUserTaskRequest}
 */
proto.services.DeleteUserTaskRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTaskIdentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.DeleteUserTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.DeleteUserTaskRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.DeleteUserTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteUserTaskRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTaskIdentityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional int64 user_identity = 1;
 * @return {number}
 */
proto.services.DeleteUserTaskRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.DeleteUserTaskRequest} returns this
 */
proto.services.DeleteUserTaskRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string task_identity = 2;
 * @return {!Array<string>}
 */
proto.services.DeleteUserTaskRequest.prototype.getTaskIdentityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.DeleteUserTaskRequest} returns this
 */
proto.services.DeleteUserTaskRequest.prototype.setTaskIdentityList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.DeleteUserTaskRequest} returns this
 */
proto.services.DeleteUserTaskRequest.prototype.addTaskIdentity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.DeleteUserTaskRequest} returns this
 */
proto.services.DeleteUserTaskRequest.prototype.clearTaskIdentityList = function() {
  return this.setTaskIdentityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserTaskList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserTaskList.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserTaskList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserTaskList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTaskList.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.UserTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserTaskList}
 */
proto.services.UserTaskList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserTaskList;
  return proto.services.UserTaskList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserTaskList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserTaskList}
 */
proto.services.UserTaskList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.services.UserTask;
      reader.readMessage(value,proto.services.UserTask.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserTaskList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserTaskList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserTaskList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTaskList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.UserTask.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserTask data = 2;
 * @return {!Array<!proto.services.UserTask>}
 */
proto.services.UserTaskList.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.UserTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserTask, 2));
};


/**
 * @param {!Array<!proto.services.UserTask>} value
 * @return {!proto.services.UserTaskList} returns this
*/
proto.services.UserTaskList.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.UserTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserTask}
 */
proto.services.UserTaskList.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.UserTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserTaskList} returns this
 */
proto.services.UserTaskList.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserTaskFilterRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserTaskFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserTaskFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserTaskFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTaskFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskIdentityList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    typeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserTaskFilterRequest}
 */
proto.services.UserTaskFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserTaskFilterRequest;
  return proto.services.UserTaskFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserTaskFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserTaskFilterRequest}
 */
proto.services.UserTaskFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTaskIdentity(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTypeList(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserTaskFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserTaskFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserTaskFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserTaskFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskIdentityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string task_identity = 1;
 * @return {!Array<string>}
 */
proto.services.UserTaskFilterRequest.prototype.getTaskIdentityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.setTaskIdentityList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.addTaskIdentity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.clearTaskIdentityList = function() {
  return this.setTaskIdentityList([]);
};


/**
 * repeated int32 type = 2;
 * @return {!Array<number>}
 */
proto.services.UserTaskFilterRequest.prototype.getTypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.services.UserTaskFilterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserTaskFilterRequest} returns this
 */
proto.services.UserTaskFilterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.services);
