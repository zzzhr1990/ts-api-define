// source: offline/systemtask.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.BatchGetRequest', null, global);
goog.exportSymbol('proto.services.BatchGetResponse', null, global);
goog.exportSymbol('proto.services.ErrorRequest', null, global);
goog.exportSymbol('proto.services.StatusChangeRequest', null, global);
goog.exportSymbol('proto.services.SystemOfflineTask', null, global);
goog.exportSymbol('proto.services.SystemOfflineTaskFile', null, global);
goog.exportSymbol('proto.services.SystemOfflineTaskFiles', null, global);
goog.exportSymbol('proto.services.SystemOfflineTaskMeta', null, global);
goog.exportSymbol('proto.services.UpdateProgressRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.BatchGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.BatchGetRequest.repeatedFields_, null);
};
goog.inherits(proto.services.BatchGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.BatchGetRequest.displayName = 'proto.services.BatchGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.BatchGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.BatchGetResponse.repeatedFields_, null);
};
goog.inherits(proto.services.BatchGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.BatchGetResponse.displayName = 'proto.services.BatchGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.SystemOfflineTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.SystemOfflineTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.SystemOfflineTask.displayName = 'proto.services.SystemOfflineTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UpdateProgressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.UpdateProgressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UpdateProgressRequest.displayName = 'proto.services.UpdateProgressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.StatusChangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.StatusChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.StatusChangeRequest.displayName = 'proto.services.StatusChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ErrorRequest.displayName = 'proto.services.ErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.SystemOfflineTaskFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.SystemOfflineTaskFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.SystemOfflineTaskFile.displayName = 'proto.services.SystemOfflineTaskFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.SystemOfflineTaskMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.SystemOfflineTaskMeta.repeatedFields_, null);
};
goog.inherits(proto.services.SystemOfflineTaskMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.SystemOfflineTaskMeta.displayName = 'proto.services.SystemOfflineTaskMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.SystemOfflineTaskFiles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.SystemOfflineTaskFiles.repeatedFields_, null);
};
goog.inherits(proto.services.SystemOfflineTaskFiles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.SystemOfflineTaskFiles.displayName = 'proto.services.SystemOfflineTaskFiles';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.BatchGetRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.BatchGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.BatchGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.BatchGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BatchGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identitiesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.BatchGetRequest}
 */
proto.services.BatchGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.BatchGetRequest;
  return proto.services.BatchGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.BatchGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.BatchGetRequest}
 */
proto.services.BatchGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIdentities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.BatchGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.BatchGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.BatchGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BatchGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string identities = 1;
 * @return {!Array<string>}
 */
proto.services.BatchGetRequest.prototype.getIdentitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.services.BatchGetRequest.prototype.setIdentitiesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.services.BatchGetRequest.prototype.addIdentities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.BatchGetRequest.prototype.clearIdentitiesList = function() {
  this.setIdentitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.BatchGetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.BatchGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.BatchGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.BatchGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BatchGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.SystemOfflineTaskMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.BatchGetResponse}
 */
proto.services.BatchGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.BatchGetResponse;
  return proto.services.BatchGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.BatchGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.BatchGetResponse}
 */
proto.services.BatchGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.SystemOfflineTaskMeta;
      reader.readMessage(value,proto.services.SystemOfflineTaskMeta.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.BatchGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.BatchGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.BatchGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BatchGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.SystemOfflineTaskMeta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SystemOfflineTaskMeta data = 1;
 * @return {!Array<!proto.services.SystemOfflineTaskMeta>}
 */
proto.services.BatchGetResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.SystemOfflineTaskMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.SystemOfflineTaskMeta, 1));
};


/** @param {!Array<!proto.services.SystemOfflineTaskMeta>} value */
proto.services.BatchGetResponse.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.SystemOfflineTaskMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.SystemOfflineTaskMeta}
 */
proto.services.BatchGetResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.SystemOfflineTaskMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.BatchGetResponse.prototype.clearDataList = function() {
  this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.SystemOfflineTask.prototype.toObject = function(opt_includeInstance) {
  return proto.services.SystemOfflineTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.SystemOfflineTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createuser: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 8, 0),
    downloadsize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    errorcode: jspb.Message.getFieldWithDefault(msg, 10, 0),
    errormessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createip: jspb.Message.getFieldWithDefault(msg, 12, ""),
    data: jspb.Message.getFieldWithDefault(msg, 13, ""),
    preview: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.SystemOfflineTask}
 */
proto.services.SystemOfflineTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.SystemOfflineTask;
  return proto.services.SystemOfflineTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.SystemOfflineTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.SystemOfflineTask}
 */
proto.services.SystemOfflineTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateuser(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadsize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrorcode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateip(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.SystemOfflineTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.SystemOfflineTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.SystemOfflineTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCreateuser();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDownloadsize();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getErrorcode();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreateip();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPreview();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.SystemOfflineTask.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTask.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 createUser = 3;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getCreateuser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setCreateuser = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 createTime = 4;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.services.SystemOfflineTask.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTask.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 status = 7;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 flag = 8;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setFlag = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 downloadSize = 9;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getDownloadsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setDownloadsize = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 errorCode = 10;
 * @return {number}
 */
proto.services.SystemOfflineTask.prototype.getErrorcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTask.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string errorMessage = 11;
 * @return {string}
 */
proto.services.SystemOfflineTask.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTask.prototype.setErrormessage = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string createIP = 12;
 * @return {string}
 */
proto.services.SystemOfflineTask.prototype.getCreateip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTask.prototype.setCreateip = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string data = 13;
 * @return {string}
 */
proto.services.SystemOfflineTask.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTask.prototype.setData = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool preview = 14;
 * @return {boolean}
 */
proto.services.SystemOfflineTask.prototype.getPreview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.services.SystemOfflineTask.prototype.setPreview = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UpdateProgressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UpdateProgressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UpdateProgressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UpdateProgressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    downloadsize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UpdateProgressRequest}
 */
proto.services.UpdateProgressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UpdateProgressRequest;
  return proto.services.UpdateProgressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UpdateProgressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UpdateProgressRequest}
 */
proto.services.UpdateProgressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadsize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UpdateProgressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UpdateProgressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UpdateProgressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UpdateProgressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDownloadsize();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.UpdateProgressRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.UpdateProgressRequest.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.UpdateProgressRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.UpdateProgressRequest.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 downloadSize = 3;
 * @return {number}
 */
proto.services.UpdateProgressRequest.prototype.getDownloadsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.services.UpdateProgressRequest.prototype.setDownloadsize = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.StatusChangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.StatusChangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.StatusChangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.StatusChangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    removelistener: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.StatusChangeRequest}
 */
proto.services.StatusChangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.StatusChangeRequest;
  return proto.services.StatusChangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.StatusChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.StatusChangeRequest}
 */
proto.services.StatusChangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemovelistener(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.StatusChangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.StatusChangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.StatusChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.StatusChangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRemovelistener();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.StatusChangeRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.StatusChangeRequest.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.services.StatusChangeRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.StatusChangeRequest.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool removeListener = 3;
 * @return {boolean}
 */
proto.services.StatusChangeRequest.prototype.getRemovelistener = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.services.StatusChangeRequest.prototype.setRemovelistener = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorcode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errormessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ErrorRequest}
 */
proto.services.ErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ErrorRequest;
  return proto.services.ErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ErrorRequest}
 */
proto.services.ErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrorcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrorcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.ErrorRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.ErrorRequest.prototype.setIdentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 errorCode = 2;
 * @return {number}
 */
proto.services.ErrorRequest.prototype.getErrorcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.services.ErrorRequest.prototype.setErrorcode = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string errorMessage = 3;
 * @return {string}
 */
proto.services.ErrorRequest.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.services.ErrorRequest.prototype.setErrormessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.SystemOfflineTaskFile.prototype.toObject = function(opt_includeInstance) {
  return proto.services.SystemOfflineTaskFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.SystemOfflineTaskFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    downloadidentity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathidentity: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    path: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 7, ""),
    size: jspb.Message.getFieldWithDefault(msg, 8, 0),
    downloadsize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fileindex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    finish: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.SystemOfflineTaskFile}
 */
proto.services.SystemOfflineTaskFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.SystemOfflineTaskFile;
  return proto.services.SystemOfflineTaskFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.SystemOfflineTaskFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.SystemOfflineTaskFile}
 */
proto.services.SystemOfflineTaskFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadidentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathidentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadsize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileindex(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinish(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.SystemOfflineTaskFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.SystemOfflineTaskFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.SystemOfflineTaskFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDownloadidentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathidentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getDownloadsize();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getFileindex();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getFinish();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string downloadIdentity = 1;
 * @return {string}
 */
proto.services.SystemOfflineTaskFile.prototype.getDownloadidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTaskFile.prototype.setDownloadidentity = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pathIdentity = 2;
 * @return {string}
 */
proto.services.SystemOfflineTaskFile.prototype.getPathidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTaskFile.prototype.setPathidentity = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 createTime = 3;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setCreatetime = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.services.SystemOfflineTaskFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTaskFile.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string path = 6;
 * @return {string}
 */
proto.services.SystemOfflineTaskFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTaskFile.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hash = 7;
 * @return {string}
 */
proto.services.SystemOfflineTaskFile.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.services.SystemOfflineTaskFile.prototype.setHash = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 size = 8;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 downloadSize = 9;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getDownloadsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setDownloadsize = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 status = 10;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 flag = 11;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setFlag = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 fileIndex = 12;
 * @return {number}
 */
proto.services.SystemOfflineTaskFile.prototype.getFileindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.services.SystemOfflineTaskFile.prototype.setFileindex = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool finish = 13;
 * @return {boolean}
 */
proto.services.SystemOfflineTaskFile.prototype.getFinish = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.services.SystemOfflineTaskFile.prototype.setFinish = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool directory = 14;
 * @return {boolean}
 */
proto.services.SystemOfflineTaskFile.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.services.SystemOfflineTaskFile.prototype.setDirectory = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.SystemOfflineTaskMeta.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.SystemOfflineTaskMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.services.SystemOfflineTaskMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.SystemOfflineTaskMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    task: (f = msg.getTask()) && proto.services.SystemOfflineTask.toObject(includeInstance, f),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.services.SystemOfflineTaskFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.SystemOfflineTaskMeta}
 */
proto.services.SystemOfflineTaskMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.SystemOfflineTaskMeta;
  return proto.services.SystemOfflineTaskMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.SystemOfflineTaskMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.SystemOfflineTaskMeta}
 */
proto.services.SystemOfflineTaskMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.SystemOfflineTask;
      reader.readMessage(value,proto.services.SystemOfflineTask.deserializeBinaryFromReader);
      msg.setTask(value);
      break;
    case 2:
      var value = new proto.services.SystemOfflineTaskFile;
      reader.readMessage(value,proto.services.SystemOfflineTaskFile.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.SystemOfflineTaskMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.SystemOfflineTaskMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.SystemOfflineTaskMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.SystemOfflineTask.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.SystemOfflineTaskFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional SystemOfflineTask task = 1;
 * @return {?proto.services.SystemOfflineTask}
 */
proto.services.SystemOfflineTaskMeta.prototype.getTask = function() {
  return /** @type{?proto.services.SystemOfflineTask} */ (
    jspb.Message.getWrapperField(this, proto.services.SystemOfflineTask, 1));
};


/** @param {?proto.services.SystemOfflineTask|undefined} value */
proto.services.SystemOfflineTaskMeta.prototype.setTask = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.services.SystemOfflineTaskMeta.prototype.clearTask = function() {
  this.setTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.SystemOfflineTaskMeta.prototype.hasTask = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SystemOfflineTaskFile files = 2;
 * @return {!Array<!proto.services.SystemOfflineTaskFile>}
 */
proto.services.SystemOfflineTaskMeta.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.services.SystemOfflineTaskFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.SystemOfflineTaskFile, 2));
};


/** @param {!Array<!proto.services.SystemOfflineTaskFile>} value */
proto.services.SystemOfflineTaskMeta.prototype.setFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.SystemOfflineTaskFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.SystemOfflineTaskFile}
 */
proto.services.SystemOfflineTaskMeta.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.SystemOfflineTaskFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.SystemOfflineTaskMeta.prototype.clearFilesList = function() {
  this.setFilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.SystemOfflineTaskFiles.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.SystemOfflineTaskFiles.prototype.toObject = function(opt_includeInstance) {
  return proto.services.SystemOfflineTaskFiles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.SystemOfflineTaskFiles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskFiles.toObject = function(includeInstance, msg) {
  var f, obj = {
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.services.SystemOfflineTaskFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.SystemOfflineTaskFiles}
 */
proto.services.SystemOfflineTaskFiles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.SystemOfflineTaskFiles;
  return proto.services.SystemOfflineTaskFiles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.SystemOfflineTaskFiles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.SystemOfflineTaskFiles}
 */
proto.services.SystemOfflineTaskFiles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.services.SystemOfflineTaskFile;
      reader.readMessage(value,proto.services.SystemOfflineTaskFile.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.SystemOfflineTaskFiles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.SystemOfflineTaskFiles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.SystemOfflineTaskFiles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.SystemOfflineTaskFiles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.SystemOfflineTaskFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SystemOfflineTaskFile files = 2;
 * @return {!Array<!proto.services.SystemOfflineTaskFile>}
 */
proto.services.SystemOfflineTaskFiles.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.services.SystemOfflineTaskFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.SystemOfflineTaskFile, 2));
};


/** @param {!Array<!proto.services.SystemOfflineTaskFile>} value */
proto.services.SystemOfflineTaskFiles.prototype.setFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.SystemOfflineTaskFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.SystemOfflineTaskFile}
 */
proto.services.SystemOfflineTaskFiles.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.SystemOfflineTaskFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.services.SystemOfflineTaskFiles.prototype.clearFilesList = function() {
  this.setFilesList([]);
};


goog.object.extend(exports, proto.services);
