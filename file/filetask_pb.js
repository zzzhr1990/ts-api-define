// source: file/filetask.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.services.FileTask', null, global);
goog.exportSymbol('proto.services.FileTaskListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.FileTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileTask.displayName = 'proto.services.FileTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileTaskListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.FileTaskListResponse.repeatedFields_, null);
};
goog.inherits(proto.services.FileTaskListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileTaskListResponse.displayName = 'proto.services.FileTaskListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileTask.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sourceUserIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destUserIdentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sourcePath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    destPath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    op: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    currentText: jspb.Message.getFieldWithDefault(msg, 10, ""),
    filesDone: jspb.Message.getFieldWithDefault(msg, 11, 0),
    filesTotal: jspb.Message.getFieldWithDefault(msg, 12, 0),
    progress: jspb.Message.getFieldWithDefault(msg, 13, 0),
    addon: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileTask}
 */
proto.services.FileTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileTask;
  return proto.services.FileTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileTask}
 */
proto.services.FileTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSourceUserIdentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDestUserIdentity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcePath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestPath(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentText(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilesDone(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilesTotal(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProgress(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSourceUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDestUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSourcePath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCurrentText();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFilesDone();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getFilesTotal();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getAddon();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional int64 identity = 1;
 * @return {number}
 */
proto.services.FileTask.prototype.getIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 source_user_identity = 2;
 * @return {number}
 */
proto.services.FileTask.prototype.getSourceUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setSourceUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 dest_user_identity = 3;
 * @return {number}
 */
proto.services.FileTask.prototype.getDestUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setDestUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string source_path = 4;
 * @return {string}
 */
proto.services.FileTask.prototype.getSourcePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setSourcePath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dest_path = 5;
 * @return {string}
 */
proto.services.FileTask.prototype.getDestPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setDestPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 op = 6;
 * @return {number}
 */
proto.services.FileTask.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 type = 7;
 * @return {number}
 */
proto.services.FileTask.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 status = 8;
 * @return {number}
 */
proto.services.FileTask.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 create_time = 9;
 * @return {number}
 */
proto.services.FileTask.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string current_text = 10;
 * @return {string}
 */
proto.services.FileTask.prototype.getCurrentText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setCurrentText = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 files_done = 11;
 * @return {number}
 */
proto.services.FileTask.prototype.getFilesDone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setFilesDone = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 files_total = 12;
 * @return {number}
 */
proto.services.FileTask.prototype.getFilesTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setFilesTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 progress = 13;
 * @return {number}
 */
proto.services.FileTask.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string addon = 14;
 * @return {string}
 */
proto.services.FileTask.prototype.getAddon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileTask} returns this
 */
proto.services.FileTask.prototype.setAddon = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.FileTaskListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileTaskListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileTaskListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileTaskListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileTaskListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.FileTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileTaskListResponse}
 */
proto.services.FileTaskListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileTaskListResponse;
  return proto.services.FileTaskListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileTaskListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileTaskListResponse}
 */
proto.services.FileTaskListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.FileTask;
      reader.readMessage(value,proto.services.FileTask.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileTaskListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileTaskListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileTaskListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileTaskListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.FileTask.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileTask data = 1;
 * @return {!Array<!proto.services.FileTask>}
 */
proto.services.FileTaskListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.FileTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.FileTask, 1));
};


/**
 * @param {!Array<!proto.services.FileTask>} value
 * @return {!proto.services.FileTaskListResponse} returns this
*/
proto.services.FileTaskListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.FileTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.FileTask}
 */
proto.services.FileTaskListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.FileTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.FileTaskListResponse} returns this
 */
proto.services.FileTaskListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


goog.object.extend(exports, proto.services);
