// source: file/userfile.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.BathFileRequest', null, global);
goog.exportSymbol('proto.services.CommonListRequest', null, global);
goog.exportSymbol('proto.services.FilterRequest', null, global);
goog.exportSymbol('proto.services.MqRequest', null, global);
goog.exportSymbol('proto.services.TrashInfo', null, global);
goog.exportSymbol('proto.services.TrashListResponse', null, global);
goog.exportSymbol('proto.services.UploadTokenResponse', null, global);
goog.exportSymbol('proto.services.UserFile', null, global);
goog.exportSymbol('proto.services.UserFileListRequest', null, global);
goog.exportSymbol('proto.services.UserFileListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.UserFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFile.displayName = 'proto.services.UserFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.TrashInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.TrashInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.TrashInfo.displayName = 'proto.services.TrashInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.FilterRequest.repeatedFields_, null);
};
goog.inherits(proto.services.FilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FilterRequest.displayName = 'proto.services.FilterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.BathFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.BathFileRequest.repeatedFields_, null);
};
goog.inherits(proto.services.BathFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.BathFileRequest.displayName = 'proto.services.BathFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.MqRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.MqRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.MqRequest.displayName = 'proto.services.MqRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFileListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFileListRequest.repeatedFields_, null);
};
goog.inherits(proto.services.UserFileListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFileListRequest.displayName = 'proto.services.UserFileListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.CommonListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.CommonListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.CommonListRequest.displayName = 'proto.services.CommonListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFileListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFileListResponse.repeatedFields_, null);
};
goog.inherits(proto.services.UserFileListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFileListResponse.displayName = 'proto.services.UserFileListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.TrashListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.TrashListResponse.repeatedFields_, null);
};
goog.inherits(proto.services.TrashListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.TrashListResponse.displayName = 'proto.services.TrashListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UploadTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.UploadTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UploadTokenResponse.displayName = 'proto.services.UploadTokenResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFile.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    path: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ext: jspb.Message.getFieldWithDefault(msg, 6, ""),
    size: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    deleted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    parent: jspb.Message.getFieldWithDefault(msg, 10, ""),
    type: jspb.Message.getFieldWithDefault(msg, 11, 0),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    atime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    version: jspb.Message.getFieldWithDefault(msg, 16, 0),
    locking: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    op: jspb.Message.getFieldWithDefault(msg, 18, 0),
    preview: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    previewType: jspb.Message.getFieldWithDefault(msg, 20, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 21, 0),
    uniqueIdentity: jspb.Message.getFieldWithDefault(msg, 22, ""),
    share: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    downloadAddress: jspb.Message.getFieldWithDefault(msg, 24, ""),
    unlockTime: jspb.Message.getFieldWithDefault(msg, 25, 0),
    top: jspb.Message.getFieldWithDefault(msg, 26, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFile}
 */
proto.services.UserFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFile;
  return proto.services.UserFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFile}
 */
proto.services.UserFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAtime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMtime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocking(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreview(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPreviewType(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueIdentity(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShare(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadAddress(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnlockTime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getAtime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getLocking();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getPreview();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getPreviewType();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getUniqueIdentity();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getShare();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getDownloadAddress();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getUnlockTime();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getTop();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.UserFile.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.services.UserFile.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 user_identity = 3;
 * @return {number}
 */
proto.services.UserFile.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string path = 4;
 * @return {string}
 */
proto.services.UserFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.services.UserFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ext = 6;
 * @return {string}
 */
proto.services.UserFile.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setExt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 size = 7;
 * @return {number}
 */
proto.services.UserFile.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string mime = 8;
 * @return {string}
 */
proto.services.UserFile.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool deleted = 9;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string parent = 10;
 * @return {string}
 */
proto.services.UserFile.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 type = 11;
 * @return {number}
 */
proto.services.UserFile.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool directory = 12;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int64 atime = 13;
 * @return {number}
 */
proto.services.UserFile.prototype.getAtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setAtime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 ctime = 14;
 * @return {number}
 */
proto.services.UserFile.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setCtime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 mtime = 15;
 * @return {number}
 */
proto.services.UserFile.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setMtime = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 version = 16;
 * @return {number}
 */
proto.services.UserFile.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional bool locking = 17;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getLocking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setLocking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional int32 op = 18;
 * @return {number}
 */
proto.services.UserFile.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional bool preview = 19;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getPreview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPreview = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional int32 preview_type = 20;
 * @return {number}
 */
proto.services.UserFile.prototype.getPreviewType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPreviewType = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 flag = 21;
 * @return {number}
 */
proto.services.UserFile.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setFlag = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string unique_identity = 22;
 * @return {string}
 */
proto.services.UserFile.prototype.getUniqueIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setUniqueIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional bool share = 23;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional string download_address = 24;
 * @return {string}
 */
proto.services.UserFile.prototype.getDownloadAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setDownloadAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional int64 unlock_time = 25;
 * @return {number}
 */
proto.services.UserFile.prototype.getUnlockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setUnlockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 top = 26;
 * @return {number}
 */
proto.services.UserFile.prototype.getTop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setTop = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.TrashInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.services.TrashInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.TrashInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pathIdentity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    addon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    locking: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    op: jspb.Message.getFieldWithDefault(msg, 11, 0),
    size: jspb.Message.getFieldWithDefault(msg, 12, 0),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.TrashInfo;
  return proto.services.TrashInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.TrashInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathIdentity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddon(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocking(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.TrashInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.TrashInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.TrashInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPathIdentity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAddon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLocking();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string path_identity = 4;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getPathIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setPathIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 create_time = 5;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 type = 7;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string mime = 8;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string addon = 9;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getAddon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setAddon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool locking = 10;
 * @return {boolean}
 */
proto.services.TrashInfo.prototype.getLocking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setLocking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int32 op = 11;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 size = 12;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool directory = 13;
 * @return {boolean}
 */
proto.services.TrashInfo.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.FilterRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    typeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    directory: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FilterRequest}
 */
proto.services.FilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FilterRequest;
  return proto.services.FilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FilterRequest}
 */
proto.services.FilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIdentity(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTypeList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirectory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getDirectory();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated string identity = 1;
 * @return {!Array<string>}
 */
proto.services.FilterRequest.prototype.getIdentityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.setIdentityList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.addIdentity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.clearIdentityList = function() {
  return this.setIdentityList([]);
};


/**
 * repeated int32 type = 2;
 * @return {!Array<number>}
 */
proto.services.FilterRequest.prototype.getTypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * optional int32 directory = 3;
 * @return {number}
 */
proto.services.FilterRequest.prototype.getDirectory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.services.FilterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FilterRequest} returns this
 */
proto.services.FilterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.BathFileRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.BathFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.BathFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.BathFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BathFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pathList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    userIdentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dest: (f = msg.getDest()) && proto.services.UserFile.toObject(includeInstance, f),
    op: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.BathFileRequest}
 */
proto.services.BathFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.BathFileRequest;
  return proto.services.BathFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.BathFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.BathFileRequest}
 */
proto.services.BathFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 4:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setDest(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.BathFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.BathFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.BathFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.BathFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * repeated string identity = 1;
 * @return {!Array<string>}
 */
proto.services.BathFileRequest.prototype.getIdentityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.setIdentityList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.addIdentity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.clearIdentityList = function() {
  return this.setIdentityList([]);
};


/**
 * repeated string path = 2;
 * @return {!Array<string>}
 */
proto.services.BathFileRequest.prototype.getPathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.setPathList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.addPath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.clearPathList = function() {
  return this.setPathList([]);
};


/**
 * optional int64 user_identity = 3;
 * @return {number}
 */
proto.services.BathFileRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional UserFile dest = 4;
 * @return {?proto.services.UserFile}
 */
proto.services.BathFileRequest.prototype.getDest = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 4));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.BathFileRequest} returns this
*/
proto.services.BathFileRequest.prototype.setDest = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.clearDest = function() {
  return this.setDest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.BathFileRequest.prototype.hasDest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 op = 5;
 * @return {number}
 */
proto.services.BathFileRequest.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.BathFileRequest} returns this
 */
proto.services.BathFileRequest.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.MqRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.MqRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.MqRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.MqRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && proto.services.UserFile.toObject(includeInstance, f),
    dest: (f = msg.getDest()) && proto.services.UserFile.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.MqRequest}
 */
proto.services.MqRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.MqRequest;
  return proto.services.MqRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.MqRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.MqRequest}
 */
proto.services.MqRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 2:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setDest(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.MqRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.MqRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.MqRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.MqRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getDest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional UserFile source = 1;
 * @return {?proto.services.UserFile}
 */
proto.services.MqRequest.prototype.getSource = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.MqRequest} returns this
*/
proto.services.MqRequest.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.MqRequest} returns this
 */
proto.services.MqRequest.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.MqRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserFile dest = 2;
 * @return {?proto.services.UserFile}
 */
proto.services.MqRequest.prototype.getDest = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 2));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.MqRequest} returns this
*/
proto.services.MqRequest.prototype.setDest = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.MqRequest} returns this
 */
proto.services.MqRequest.prototype.clearDest = function() {
  return this.setDest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.MqRequest.prototype.hasDest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 type = 3;
 * @return {number}
 */
proto.services.MqRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.MqRequest} returns this
 */
proto.services.MqRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFileListRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFileListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFileListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFileListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    listInfo: (f = msg.getListInfo()) && common_common_entity_pb.ListInfo.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    common_common_entity_pb.OrderByRequest.toObject, includeInstance),
    filter: (f = msg.getFilter()) && proto.services.FilterRequest.toObject(includeInstance, f),
    op: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFileListRequest}
 */
proto.services.UserFileListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFileListRequest;
  return proto.services.UserFileListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFileListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFileListRequest}
 */
proto.services.UserFileListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = new common_common_entity_pb.ListInfo;
      reader.readMessage(value,common_common_entity_pb.ListInfo.deserializeBinaryFromReader);
      msg.setListInfo(value);
      break;
    case 5:
      var value = new common_common_entity_pb.OrderByRequest;
      reader.readMessage(value,common_common_entity_pb.OrderByRequest.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    case 6:
      var value = new proto.services.FilterRequest;
      reader.readMessage(value,proto.services.FilterRequest.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFileListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFileListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFileListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getListInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_entity_pb.ListInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_common_entity_pb.OrderByRequest.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.services.FilterRequest.serializeBinaryToWriter
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.UserFileListRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.UserFileListRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.services.UserFileListRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ListInfo list_info = 4;
 * @return {?proto.services.ListInfo}
 */
proto.services.UserFileListRequest.prototype.getListInfo = function() {
  return /** @type{?proto.services.ListInfo} */ (
    jspb.Message.getWrapperField(this, common_common_entity_pb.ListInfo, 4));
};


/**
 * @param {?proto.services.ListInfo|undefined} value
 * @return {!proto.services.UserFileListRequest} returns this
*/
proto.services.UserFileListRequest.prototype.setListInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.clearListInfo = function() {
  return this.setListInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFileListRequest.prototype.hasListInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderByRequest order_by = 5;
 * @return {!Array<!proto.services.OrderByRequest>}
 */
proto.services.UserFileListRequest.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.services.OrderByRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_common_entity_pb.OrderByRequest, 5));
};


/**
 * @param {!Array<!proto.services.OrderByRequest>} value
 * @return {!proto.services.UserFileListRequest} returns this
*/
proto.services.UserFileListRequest.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.services.OrderByRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.OrderByRequest}
 */
proto.services.UserFileListRequest.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.services.OrderByRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};


/**
 * optional FilterRequest filter = 6;
 * @return {?proto.services.FilterRequest}
 */
proto.services.UserFileListRequest.prototype.getFilter = function() {
  return /** @type{?proto.services.FilterRequest} */ (
    jspb.Message.getWrapperField(this, proto.services.FilterRequest, 6));
};


/**
 * @param {?proto.services.FilterRequest|undefined} value
 * @return {!proto.services.UserFileListRequest} returns this
*/
proto.services.UserFileListRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFileListRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 op = 7;
 * @return {number}
 */
proto.services.UserFileListRequest.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileListRequest} returns this
 */
proto.services.UserFileListRequest.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.CommonListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.CommonListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.CommonListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.CommonListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    listInfo: (f = msg.getListInfo()) && common_common_entity_pb.ListInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.CommonListRequest}
 */
proto.services.CommonListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.CommonListRequest;
  return proto.services.CommonListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.CommonListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.CommonListRequest}
 */
proto.services.CommonListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 2:
      var value = new common_common_entity_pb.ListInfo;
      reader.readMessage(value,common_common_entity_pb.ListInfo.deserializeBinaryFromReader);
      msg.setListInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.CommonListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.CommonListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.CommonListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.CommonListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getListInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_entity_pb.ListInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 user_identity = 1;
 * @return {number}
 */
proto.services.CommonListRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.CommonListRequest} returns this
 */
proto.services.CommonListRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ListInfo list_info = 2;
 * @return {?proto.services.ListInfo}
 */
proto.services.CommonListRequest.prototype.getListInfo = function() {
  return /** @type{?proto.services.ListInfo} */ (
    jspb.Message.getWrapperField(this, common_common_entity_pb.ListInfo, 2));
};


/**
 * @param {?proto.services.ListInfo|undefined} value
 * @return {!proto.services.CommonListRequest} returns this
*/
proto.services.CommonListRequest.prototype.setListInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.CommonListRequest} returns this
 */
proto.services.CommonListRequest.prototype.clearListInfo = function() {
  return this.setListInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.CommonListRequest.prototype.hasListInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFileListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFileListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFileListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFileListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: (f = msg.getParent()) && proto.services.UserFile.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.UserFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFileListResponse}
 */
proto.services.UserFileListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFileListResponse;
  return proto.services.UserFileListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFileListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFileListResponse}
 */
proto.services.UserFileListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFileListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFileListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFileListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserFile parent = 1;
 * @return {?proto.services.UserFile}
 */
proto.services.UserFileListResponse.prototype.getParent = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.UserFileListResponse} returns this
*/
proto.services.UserFileListResponse.prototype.setParent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFileListResponse} returns this
 */
proto.services.UserFileListResponse.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFileListResponse.prototype.hasParent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserFile data = 2;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFileListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 2));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFileListResponse} returns this
*/
proto.services.UserFileListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFileListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFileListResponse} returns this
 */
proto.services.UserFileListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.TrashListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.TrashListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.TrashListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.TrashListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.TrashInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.TrashListResponse}
 */
proto.services.TrashListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.TrashListResponse;
  return proto.services.TrashListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.TrashListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.TrashListResponse}
 */
proto.services.TrashListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.services.TrashInfo;
      reader.readMessage(value,proto.services.TrashInfo.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.TrashListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.TrashListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.TrashListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.TrashInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TrashInfo data = 2;
 * @return {!Array<!proto.services.TrashInfo>}
 */
proto.services.TrashListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.TrashInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.TrashInfo, 2));
};


/**
 * @param {!Array<!proto.services.TrashInfo>} value
 * @return {!proto.services.TrashListResponse} returns this
*/
proto.services.TrashListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.TrashInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.TrashInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.TrashListResponse} returns this
 */
proto.services.TrashListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UploadTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UploadTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UploadTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UploadTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filePath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    created: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    createInfo: (f = msg.getCreateInfo()) && proto.services.UserFile.toObject(includeInstance, f),
    partUploadUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    directUploadUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UploadTokenResponse}
 */
proto.services.UploadTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UploadTokenResponse;
  return proto.services.UploadTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UploadTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UploadTokenResponse}
 */
proto.services.UploadTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreated(value);
      break;
    case 5:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setCreateInfo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartUploadUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectUploadUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UploadTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UploadTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UploadTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UploadTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreated();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCreateInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getPartUploadUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDirectUploadUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string upload_token = 1;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getUploadToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setUploadToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string file_path = 3;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setFilePath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool created = 4;
 * @return {boolean}
 */
proto.services.UploadTokenResponse.prototype.getCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional UserFile create_info = 5;
 * @return {?proto.services.UserFile}
 */
proto.services.UploadTokenResponse.prototype.getCreateInfo = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 5));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.UploadTokenResponse} returns this
*/
proto.services.UploadTokenResponse.prototype.setCreateInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.clearCreateInfo = function() {
  return this.setCreateInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UploadTokenResponse.prototype.hasCreateInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string part_upload_url = 6;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getPartUploadUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setPartUploadUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string direct_upload_url = 7;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getDirectUploadUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setDirectUploadUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.services);
