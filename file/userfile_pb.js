// source: file/userfile.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.DeleteFilesRequest', null, global);
goog.exportSymbol('proto.services.DeleteInTrashRequest', null, global);
goog.exportSymbol('proto.services.FileHistory', null, global);
goog.exportSymbol('proto.services.FileHistoryEx', null, global);
goog.exportSymbol('proto.services.FileHistoryResponse', null, global);
goog.exportSymbol('proto.services.ListTrashRequest', null, global);
goog.exportSymbol('proto.services.ListUserFileRequest', null, global);
goog.exportSymbol('proto.services.MoveBackRequest', null, global);
goog.exportSymbol('proto.services.PageTrashRequest', null, global);
goog.exportSymbol('proto.services.PageUserFileRequest', null, global);
goog.exportSymbol('proto.services.TrashInfo', null, global);
goog.exportSymbol('proto.services.TrashList', null, global);
goog.exportSymbol('proto.services.TrashPage', null, global);
goog.exportSymbol('proto.services.UploadTokenResponse', null, global);
goog.exportSymbol('proto.services.UserFile', null, global);
goog.exportSymbol('proto.services.UserFileEx', null, global);
goog.exportSymbol('proto.services.UserFileList', null, global);
goog.exportSymbol('proto.services.UserFileOperation', null, global);
goog.exportSymbol('proto.services.UserFilePage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.DeleteInTrashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DeleteInTrashRequest.repeatedFields_, null);
};
goog.inherits(proto.services.DeleteInTrashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.DeleteInTrashRequest.displayName = 'proto.services.DeleteInTrashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.MoveBackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.MoveBackRequest.repeatedFields_, null);
};
goog.inherits(proto.services.MoveBackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.MoveBackRequest.displayName = 'proto.services.MoveBackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFile.repeatedFields_, null);
};
goog.inherits(proto.services.UserFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFile.displayName = 'proto.services.UserFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFileEx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFileEx.repeatedFields_, null);
};
goog.inherits(proto.services.UserFileEx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFileEx.displayName = 'proto.services.UserFileEx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFileOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFileOperation.repeatedFields_, null);
};
goog.inherits(proto.services.UserFileOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFileOperation.displayName = 'proto.services.UserFileOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFilePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFilePage.repeatedFields_, null);
};
goog.inherits(proto.services.UserFilePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFilePage.displayName = 'proto.services.UserFilePage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.DeleteFilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.DeleteFilesRequest.repeatedFields_, null);
};
goog.inherits(proto.services.DeleteFilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.DeleteFilesRequest.displayName = 'proto.services.DeleteFilesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UserFileList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.UserFileList.repeatedFields_, null);
};
goog.inherits(proto.services.UserFileList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UserFileList.displayName = 'proto.services.UserFileList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.TrashInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.TrashInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.TrashInfo.displayName = 'proto.services.TrashInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.TrashList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.TrashList.repeatedFields_, null);
};
goog.inherits(proto.services.TrashList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.TrashList.displayName = 'proto.services.TrashList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.TrashPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.TrashPage.repeatedFields_, null);
};
goog.inherits(proto.services.TrashPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.TrashPage.displayName = 'proto.services.TrashPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PageTrashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.PageTrashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PageTrashRequest.displayName = 'proto.services.PageTrashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PageUserFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.PageUserFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PageUserFileRequest.displayName = 'proto.services.PageUserFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ListUserFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ListUserFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ListUserFileRequest.displayName = 'proto.services.ListUserFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.ListTrashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.ListTrashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.ListTrashRequest.displayName = 'proto.services.ListTrashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.UploadTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.UploadTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.UploadTokenResponse.displayName = 'proto.services.UploadTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.FileHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.services.FileHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileHistoryResponse.displayName = 'proto.services.FileHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.FileHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileHistory.displayName = 'proto.services.FileHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.FileHistoryEx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.FileHistoryEx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.FileHistoryEx.displayName = 'proto.services.FileHistoryEx';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.DeleteInTrashRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.DeleteInTrashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.DeleteInTrashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.DeleteInTrashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteInTrashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    useridentity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.DeleteInTrashRequest}
 */
proto.services.DeleteInTrashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.DeleteInTrashRequest;
  return proto.services.DeleteInTrashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.DeleteInTrashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.DeleteInTrashRequest}
 */
proto.services.DeleteInTrashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSource(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.DeleteInTrashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.DeleteInTrashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.DeleteInTrashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteInTrashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated string source = 1;
 * @return {!Array<string>}
 */
proto.services.DeleteInTrashRequest.prototype.getSourceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.DeleteInTrashRequest} returns this
 */
proto.services.DeleteInTrashRequest.prototype.setSourceList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.DeleteInTrashRequest} returns this
 */
proto.services.DeleteInTrashRequest.prototype.addSource = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.DeleteInTrashRequest} returns this
 */
proto.services.DeleteInTrashRequest.prototype.clearSourceList = function() {
  return this.setSourceList([]);
};


/**
 * optional int64 userIdentity = 2;
 * @return {number}
 */
proto.services.DeleteInTrashRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.DeleteInTrashRequest} returns this
 */
proto.services.DeleteInTrashRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.MoveBackRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.MoveBackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.MoveBackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.MoveBackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.MoveBackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: (f = msg.getDestination()) && proto.services.UserFile.toObject(includeInstance, f),
    sourceList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    useridentity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.MoveBackRequest}
 */
proto.services.MoveBackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.MoveBackRequest;
  return proto.services.MoveBackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.MoveBackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.MoveBackRequest}
 */
proto.services.MoveBackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSource(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.MoveBackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.MoveBackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.MoveBackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.MoveBackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getSourceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional UserFile destination = 1;
 * @return {?proto.services.UserFile}
 */
proto.services.MoveBackRequest.prototype.getDestination = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.MoveBackRequest} returns this
*/
proto.services.MoveBackRequest.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.MoveBackRequest} returns this
 */
proto.services.MoveBackRequest.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.MoveBackRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string source = 2;
 * @return {!Array<string>}
 */
proto.services.MoveBackRequest.prototype.getSourceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.MoveBackRequest} returns this
 */
proto.services.MoveBackRequest.prototype.setSourceList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.MoveBackRequest} returns this
 */
proto.services.MoveBackRequest.prototype.addSource = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.MoveBackRequest} returns this
 */
proto.services.MoveBackRequest.prototype.clearSourceList = function() {
  return this.setSourceList([]);
};


/**
 * optional int64 userIdentity = 3;
 * @return {number}
 */
proto.services.MoveBackRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.MoveBackRequest} returns this
 */
proto.services.MoveBackRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFile.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFile.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    path: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ext: jspb.Message.getFieldWithDefault(msg, 6, ""),
    size: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    parent: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    atime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    version: jspb.Message.getFieldWithDefault(msg, 15, 0),
    locking: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    op: jspb.Message.getFieldWithDefault(msg, 17, 0),
    preview: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    previewtype: jspb.Message.getFieldWithDefault(msg, 19, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 20, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.services.UserFile.toObject, includeInstance),
    uniqueidentity: jspb.Message.getFieldWithDefault(msg, 22, ""),
    share: jspb.Message.getBooleanFieldWithDefault(msg, 23, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFile}
 */
proto.services.UserFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFile;
  return proto.services.UserFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFile}
 */
proto.services.UserFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAtime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMtime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocking(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreview(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPreviewtype(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 21:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueidentity(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAtime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getLocking();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getPreview();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPreviewtype();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getUniqueidentity();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getShare();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.UserFile.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.services.UserFile.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 userIdentity = 3;
 * @return {number}
 */
proto.services.UserFile.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string path = 4;
 * @return {string}
 */
proto.services.UserFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.services.UserFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ext = 6;
 * @return {string}
 */
proto.services.UserFile.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setExt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 size = 7;
 * @return {number}
 */
proto.services.UserFile.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string mime = 8;
 * @return {string}
 */
proto.services.UserFile.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string parent = 9;
 * @return {string}
 */
proto.services.UserFile.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 type = 10;
 * @return {number}
 */
proto.services.UserFile.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool directory = 11;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int64 atime = 12;
 * @return {number}
 */
proto.services.UserFile.prototype.getAtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setAtime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 ctime = 13;
 * @return {number}
 */
proto.services.UserFile.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setCtime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 mtime = 14;
 * @return {number}
 */
proto.services.UserFile.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setMtime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 version = 15;
 * @return {number}
 */
proto.services.UserFile.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool locking = 16;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getLocking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setLocking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional int32 op = 17;
 * @return {number}
 */
proto.services.UserFile.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool preview = 18;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getPreview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPreview = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional int32 previewType = 19;
 * @return {number}
 */
proto.services.UserFile.prototype.getPreviewtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setPreviewtype = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 flag = 20;
 * @return {number}
 */
proto.services.UserFile.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setFlag = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * repeated UserFile children = 21;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFile.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 21));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFile} returns this
*/
proto.services.UserFile.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFile.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional string uniqueIdentity = 22;
 * @return {string}
 */
proto.services.UserFile.prototype.getUniqueidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setUniqueidentity = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional bool share = 23;
 * @return {boolean}
 */
proto.services.UserFile.prototype.getShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFile} returns this
 */
proto.services.UserFile.prototype.setShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFileEx.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFileEx.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFileEx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFileEx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileEx.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    path: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ext: jspb.Message.getFieldWithDefault(msg, 6, ""),
    size: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    parent: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    atime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    version: jspb.Message.getFieldWithDefault(msg, 15, 0),
    locking: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    op: jspb.Message.getFieldWithDefault(msg, 17, 0),
    preview: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    previewtype: jspb.Message.getFieldWithDefault(msg, 19, 0),
    flag: jspb.Message.getFieldWithDefault(msg, 20, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.services.UserFile.toObject, includeInstance),
    downloadaddress: jspb.Message.getFieldWithDefault(msg, 22, ""),
    uniqueidentity: jspb.Message.getFieldWithDefault(msg, 23, ""),
    share: jspb.Message.getBooleanFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFileEx}
 */
proto.services.UserFileEx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFileEx;
  return proto.services.UserFileEx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFileEx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFileEx}
 */
proto.services.UserFileEx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAtime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMtime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocking(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOp(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreview(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPreviewtype(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlag(value);
      break;
    case 21:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadaddress(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueidentity(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFileEx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFileEx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFileEx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileEx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAtime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getLocking();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getOp();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getPreview();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPreviewtype();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getFlag();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getDownloadaddress();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getUniqueidentity();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getShare();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 userIdentity = 3;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string path = 4;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string ext = 6;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setExt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 size = 7;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string mime = 8;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string parent = 9;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 type = 10;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool directory = 11;
 * @return {boolean}
 */
proto.services.UserFileEx.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int64 atime = 12;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getAtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setAtime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 ctime = 13;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setCtime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 mtime = 14;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setMtime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 version = 15;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool locking = 16;
 * @return {boolean}
 */
proto.services.UserFileEx.prototype.getLocking = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setLocking = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional int32 op = 17;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getOp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setOp = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool preview = 18;
 * @return {boolean}
 */
proto.services.UserFileEx.prototype.getPreview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setPreview = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional int32 previewType = 19;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getPreviewtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setPreviewtype = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 flag = 20;
 * @return {number}
 */
proto.services.UserFileEx.prototype.getFlag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setFlag = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * repeated UserFile children = 21;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFileEx.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 21));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFileEx} returns this
*/
proto.services.UserFileEx.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFileEx.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional string downloadAddress = 22;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getDownloadaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setDownloadaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string uniqueIdentity = 23;
 * @return {string}
 */
proto.services.UserFileEx.prototype.getUniqueidentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setUniqueidentity = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool share = 24;
 * @return {boolean}
 */
proto.services.UserFileEx.prototype.getShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.UserFileEx} returns this
 */
proto.services.UserFileEx.prototype.setShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFileOperation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFileOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFileOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFileOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceList: jspb.Message.toObjectList(msg.getSourceList(),
    proto.services.UserFile.toObject, includeInstance),
    destination: (f = msg.getDestination()) && proto.services.UserFile.toObject(includeInstance, f),
    operationcode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    useridentity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFileOperation}
 */
proto.services.UserFileOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFileOperation;
  return proto.services.UserFileOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFileOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFileOperation}
 */
proto.services.UserFileOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addSource(value);
      break;
    case 2:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOperationcode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFileOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFileOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFileOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getOperationcode();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated UserFile source = 1;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFileOperation.prototype.getSourceList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFileOperation} returns this
*/
proto.services.UserFileOperation.prototype.setSourceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFileOperation.prototype.addSource = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFileOperation} returns this
 */
proto.services.UserFileOperation.prototype.clearSourceList = function() {
  return this.setSourceList([]);
};


/**
 * optional UserFile destination = 2;
 * @return {?proto.services.UserFile}
 */
proto.services.UserFileOperation.prototype.getDestination = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 2));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.UserFileOperation} returns this
*/
proto.services.UserFileOperation.prototype.setDestination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFileOperation} returns this
 */
proto.services.UserFileOperation.prototype.clearDestination = function() {
  return this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFileOperation.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 operationCode = 3;
 * @return {number}
 */
proto.services.UserFileOperation.prototype.getOperationcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileOperation} returns this
 */
proto.services.UserFileOperation.prototype.setOperationcode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 userIdentity = 4;
 * @return {number}
 */
proto.services.UserFileOperation.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFileOperation} returns this
 */
proto.services.UserFileOperation.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFilePage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFilePage.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFilePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFilePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFilePage.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: (f = msg.getParent()) && proto.services.UserFile.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.services.UserFile.toObject, includeInstance),
    totalcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalpage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    page: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFilePage}
 */
proto.services.UserFilePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFilePage;
  return proto.services.UserFilePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFilePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFilePage}
 */
proto.services.UserFilePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFilePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFilePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFilePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFilePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotalpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional UserFile parent = 1;
 * @return {?proto.services.UserFile}
 */
proto.services.UserFilePage.prototype.getParent = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.UserFilePage} returns this
*/
proto.services.UserFilePage.prototype.setParent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFilePage.prototype.hasParent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserFile list = 2;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFilePage.prototype.getListList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 2));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFilePage} returns this
*/
proto.services.UserFilePage.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFilePage.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional int64 totalCount = 3;
 * @return {number}
 */
proto.services.UserFilePage.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 totalPage = 4;
 * @return {number}
 */
proto.services.UserFilePage.prototype.getTotalpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.setTotalpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 page = 5;
 * @return {number}
 */
proto.services.UserFilePage.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageSize = 6;
 * @return {number}
 */
proto.services.UserFilePage.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.UserFilePage} returns this
 */
proto.services.UserFilePage.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.DeleteFilesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.DeleteFilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.DeleteFilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.DeleteFilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteFilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    useridentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filesidentityList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.DeleteFilesRequest}
 */
proto.services.DeleteFilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.DeleteFilesRequest;
  return proto.services.DeleteFilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.DeleteFilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.DeleteFilesRequest}
 */
proto.services.DeleteFilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilesidentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.DeleteFilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.DeleteFilesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.DeleteFilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.DeleteFilesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFilesidentityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional int64 userIdentity = 1;
 * @return {number}
 */
proto.services.DeleteFilesRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.DeleteFilesRequest} returns this
 */
proto.services.DeleteFilesRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string filesIdentity = 2;
 * @return {!Array<string>}
 */
proto.services.DeleteFilesRequest.prototype.getFilesidentityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.DeleteFilesRequest} returns this
 */
proto.services.DeleteFilesRequest.prototype.setFilesidentityList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.DeleteFilesRequest} returns this
 */
proto.services.DeleteFilesRequest.prototype.addFilesidentity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.DeleteFilesRequest} returns this
 */
proto.services.DeleteFilesRequest.prototype.clearFilesidentityList = function() {
  return this.setFilesidentityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.UserFileList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UserFileList.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UserFileList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UserFileList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileList.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: (f = msg.getParent()) && proto.services.UserFile.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.services.UserFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UserFileList}
 */
proto.services.UserFileList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UserFileList;
  return proto.services.UserFileList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UserFileList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UserFileList}
 */
proto.services.UserFileList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.services.UserFile;
      reader.readMessage(value,proto.services.UserFile.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UserFileList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UserFileList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UserFileList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UserFileList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.UserFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserFile parent = 1;
 * @return {?proto.services.UserFile}
 */
proto.services.UserFileList.prototype.getParent = function() {
  return /** @type{?proto.services.UserFile} */ (
    jspb.Message.getWrapperField(this, proto.services.UserFile, 1));
};


/**
 * @param {?proto.services.UserFile|undefined} value
 * @return {!proto.services.UserFileList} returns this
*/
proto.services.UserFileList.prototype.setParent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.UserFileList} returns this
 */
proto.services.UserFileList.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.UserFileList.prototype.hasParent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserFile list = 2;
 * @return {!Array<!proto.services.UserFile>}
 */
proto.services.UserFileList.prototype.getListList = function() {
  return /** @type{!Array<!proto.services.UserFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.UserFile, 2));
};


/**
 * @param {!Array<!proto.services.UserFile>} value
 * @return {!proto.services.UserFileList} returns this
*/
proto.services.UserFileList.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.UserFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.UserFile}
 */
proto.services.UserFileList.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.UserFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.UserFileList} returns this
 */
proto.services.UserFileList.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.TrashInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.services.TrashInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.TrashInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    deletetime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    directory: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.TrashInfo;
  return proto.services.TrashInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.TrashInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.TrashInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.TrashInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.TrashInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getDeletetime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDirectory();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.services.TrashInfo.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 deleteTime = 5;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getDeletetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setDeletetime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.services.TrashInfo.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool directory = 7;
 * @return {boolean}
 */
proto.services.TrashInfo.prototype.getDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.TrashInfo} returns this
 */
proto.services.TrashInfo.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.TrashList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.TrashList.prototype.toObject = function(opt_includeInstance) {
  return proto.services.TrashList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.TrashList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashList.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.services.TrashInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.TrashList}
 */
proto.services.TrashList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.TrashList;
  return proto.services.TrashList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.TrashList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.TrashList}
 */
proto.services.TrashList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.TrashInfo;
      reader.readMessage(value,proto.services.TrashInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.TrashList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.TrashList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.TrashList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.TrashInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TrashInfo list = 1;
 * @return {!Array<!proto.services.TrashInfo>}
 */
proto.services.TrashList.prototype.getListList = function() {
  return /** @type{!Array<!proto.services.TrashInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.TrashInfo, 1));
};


/**
 * @param {!Array<!proto.services.TrashInfo>} value
 * @return {!proto.services.TrashList} returns this
*/
proto.services.TrashList.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.TrashInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashList.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.TrashInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.TrashList} returns this
 */
proto.services.TrashList.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.TrashPage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.TrashPage.prototype.toObject = function(opt_includeInstance) {
  return proto.services.TrashPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.TrashPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.services.TrashInfo.toObject, includeInstance),
    totalcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalpage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.TrashPage}
 */
proto.services.TrashPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.TrashPage;
  return proto.services.TrashPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.TrashPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.TrashPage}
 */
proto.services.TrashPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.TrashInfo;
      reader.readMessage(value,proto.services.TrashInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.TrashPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.TrashPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.TrashPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.TrashPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.TrashInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTotalpage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * repeated TrashInfo list = 1;
 * @return {!Array<!proto.services.TrashInfo>}
 */
proto.services.TrashPage.prototype.getListList = function() {
  return /** @type{!Array<!proto.services.TrashInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.TrashInfo, 1));
};


/**
 * @param {!Array<!proto.services.TrashInfo>} value
 * @return {!proto.services.TrashPage} returns this
*/
proto.services.TrashPage.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.TrashInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.TrashInfo}
 */
proto.services.TrashPage.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.TrashInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.TrashPage} returns this
 */
proto.services.TrashPage.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional int64 totalCount = 2;
 * @return {number}
 */
proto.services.TrashPage.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashPage} returns this
 */
proto.services.TrashPage.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 totalPage = 3;
 * @return {number}
 */
proto.services.TrashPage.prototype.getTotalpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashPage} returns this
 */
proto.services.TrashPage.prototype.setTotalpage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 page = 4;
 * @return {number}
 */
proto.services.TrashPage.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashPage} returns this
 */
proto.services.TrashPage.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageSize = 5;
 * @return {number}
 */
proto.services.TrashPage.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.TrashPage} returns this
 */
proto.services.TrashPage.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PageTrashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PageTrashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PageTrashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PageTrashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    useridentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderby: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PageTrashRequest}
 */
proto.services.PageTrashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PageTrashRequest;
  return proto.services.PageTrashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PageTrashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PageTrashRequest}
 */
proto.services.PageTrashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderby(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PageTrashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PageTrashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PageTrashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PageTrashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrderby();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 userIdentity = 1;
 * @return {number}
 */
proto.services.PageTrashRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageTrashRequest} returns this
 */
proto.services.PageTrashRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 orderBy = 2;
 * @return {number}
 */
proto.services.PageTrashRequest.prototype.getOrderby = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageTrashRequest} returns this
 */
proto.services.PageTrashRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.services.PageTrashRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageTrashRequest} returns this
 */
proto.services.PageTrashRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pageSize = 4;
 * @return {number}
 */
proto.services.PageTrashRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageTrashRequest} returns this
 */
proto.services.PageTrashRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PageUserFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PageUserFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PageUserFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PageUserFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    orderby: jspb.Message.getFieldWithDefault(msg, 4, 0),
    page: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 6, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 7, 0),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    share: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    name: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PageUserFileRequest}
 */
proto.services.PageUserFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PageUserFileRequest;
  return proto.services.PageUserFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PageUserFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PageUserFileRequest}
 */
proto.services.PageUserFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderby(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFilter(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShare(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PageUserFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PageUserFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PageUserFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PageUserFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOrderby();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFilter();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getShare();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.PageUserFileRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.services.PageUserFileRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 userIdentity = 3;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 orderBy = 4;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getOrderby = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 page = 5;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pageSize = 6;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 filter = 7;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 type = 8;
 * @return {number}
 */
proto.services.PageUserFileRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool share = 9;
 * @return {boolean}
 */
proto.services.PageUserFileRequest.prototype.getShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.services.PageUserFileRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.PageUserFileRequest} returns this
 */
proto.services.PageUserFileRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ListUserFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ListUserFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ListUserFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListUserFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    useridentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    orderby: jspb.Message.getFieldWithDefault(msg, 4, 0),
    start: jspb.Message.getFieldWithDefault(msg, 5, 0),
    listsize: jspb.Message.getFieldWithDefault(msg, 6, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 7, 0),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    share: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    name: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ListUserFileRequest}
 */
proto.services.ListUserFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ListUserFileRequest;
  return proto.services.ListUserFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ListUserFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ListUserFileRequest}
 */
proto.services.ListUserFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderby(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListsize(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFilter(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShare(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ListUserFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ListUserFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ListUserFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListUserFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOrderby();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getListsize();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFilter();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getShare();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.ListUserFileRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.services.ListUserFileRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 userIdentity = 3;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 orderBy = 4;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getOrderby = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 start = 5;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 listSize = 6;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getListsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setListsize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 filter = 7;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getFilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 type = 8;
 * @return {number}
 */
proto.services.ListUserFileRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool share = 9;
 * @return {boolean}
 */
proto.services.ListUserFileRequest.prototype.getShare = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setShare = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.services.ListUserFileRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.ListUserFileRequest} returns this
 */
proto.services.ListUserFileRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.ListTrashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.ListTrashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.ListTrashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListTrashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    useridentity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderby: jspb.Message.getFieldWithDefault(msg, 2, 0),
    start: jspb.Message.getFieldWithDefault(msg, 6, 0),
    listsize: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.ListTrashRequest}
 */
proto.services.ListTrashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.ListTrashRequest;
  return proto.services.ListTrashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.ListTrashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.ListTrashRequest}
 */
proto.services.ListTrashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseridentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderby(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListsize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.ListTrashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.ListTrashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.ListTrashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.ListTrashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUseridentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrderby();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getListsize();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int64 userIdentity = 1;
 * @return {number}
 */
proto.services.ListTrashRequest.prototype.getUseridentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListTrashRequest} returns this
 */
proto.services.ListTrashRequest.prototype.setUseridentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 orderBy = 2;
 * @return {number}
 */
proto.services.ListTrashRequest.prototype.getOrderby = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListTrashRequest} returns this
 */
proto.services.ListTrashRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 start = 6;
 * @return {number}
 */
proto.services.ListTrashRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListTrashRequest} returns this
 */
proto.services.ListTrashRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 listSize = 7;
 * @return {number}
 */
proto.services.ListTrashRequest.prototype.getListsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.ListTrashRequest} returns this
 */
proto.services.ListTrashRequest.prototype.setListsize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.UploadTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.UploadTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.UploadTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UploadTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadtoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uploadurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filepath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.UploadTokenResponse}
 */
proto.services.UploadTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.UploadTokenResponse;
  return proto.services.UploadTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.UploadTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.UploadTokenResponse}
 */
proto.services.UploadTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadtoken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadurl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.UploadTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.UploadTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.UploadTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.UploadTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadtoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUploadurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string uploadToken = 1;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getUploadtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setUploadtoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uploadUrl = 3;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getUploadurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setUploadurl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string filePath = 4;
 * @return {string}
 */
proto.services.UploadTokenResponse.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.UploadTokenResponse} returns this
 */
proto.services.UploadTokenResponse.prototype.setFilepath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.FileHistoryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.services.FileHistory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileHistoryResponse}
 */
proto.services.FileHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileHistoryResponse;
  return proto.services.FileHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileHistoryResponse}
 */
proto.services.FileHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = new proto.services.FileHistory;
      reader.readMessage(value,proto.services.FileHistory.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.services.FileHistory.serializeBinaryToWriter
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.FileHistoryResponse.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileHistoryResponse} returns this
 */
proto.services.FileHistoryResponse.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated FileHistory history = 2;
 * @return {!Array<!proto.services.FileHistory>}
 */
proto.services.FileHistoryResponse.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.services.FileHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.FileHistory, 2));
};


/**
 * @param {!Array<!proto.services.FileHistory>} value
 * @return {!proto.services.FileHistoryResponse} returns this
*/
proto.services.FileHistoryResponse.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.FileHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.FileHistory}
 */
proto.services.FileHistoryResponse.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.FileHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.FileHistoryResponse} returns this
 */
proto.services.FileHistoryResponse.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    version: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileHistory}
 */
proto.services.FileHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileHistory;
  return proto.services.FileHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileHistory}
 */
proto.services.FileHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.services.FileHistory.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileHistory} returns this
 */
proto.services.FileHistory.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.FileHistory.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistory} returns this
 */
proto.services.FileHistory.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ctime = 3;
 * @return {number}
 */
proto.services.FileHistory.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistory} returns this
 */
proto.services.FileHistory.prototype.setCtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 version = 4;
 * @return {number}
 */
proto.services.FileHistory.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistory} returns this
 */
proto.services.FileHistory.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.FileHistoryEx.prototype.toObject = function(opt_includeInstance) {
  return proto.services.FileHistoryEx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.FileHistoryEx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistoryEx.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ctime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    version: jspb.Message.getFieldWithDefault(msg, 4, 0),
    downloadaddress: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.FileHistoryEx}
 */
proto.services.FileHistoryEx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.FileHistoryEx;
  return proto.services.FileHistoryEx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.FileHistoryEx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.FileHistoryEx}
 */
proto.services.FileHistoryEx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.FileHistoryEx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.FileHistoryEx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.FileHistoryEx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.FileHistoryEx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCtime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDownloadaddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.services.FileHistoryEx.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileHistoryEx} returns this
 */
proto.services.FileHistoryEx.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.services.FileHistoryEx.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistoryEx} returns this
 */
proto.services.FileHistoryEx.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ctime = 3;
 * @return {number}
 */
proto.services.FileHistoryEx.prototype.getCtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistoryEx} returns this
 */
proto.services.FileHistoryEx.prototype.setCtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 version = 4;
 * @return {number}
 */
proto.services.FileHistoryEx.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.FileHistoryEx} returns this
 */
proto.services.FileHistoryEx.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string downloadAddress = 5;
 * @return {string}
 */
proto.services.FileHistoryEx.prototype.getDownloadaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.FileHistoryEx} returns this
 */
proto.services.FileHistoryEx.prototype.setDownloadaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.services);
