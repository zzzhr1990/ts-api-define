// source: bill/bill.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_entity_pb = require('../common/common_entity_pb.js');
goog.object.extend(proto, common_common_entity_pb);
goog.exportSymbol('proto.services.Order', null, global);
goog.exportSymbol('proto.services.OrderFilterRequest', null, global);
goog.exportSymbol('proto.services.OrderListRequest', null, global);
goog.exportSymbol('proto.services.OrderListResponse', null, global);
goog.exportSymbol('proto.services.Payment', null, global);
goog.exportSymbol('proto.services.Plan', null, global);
goog.exportSymbol('proto.services.PlanListRequest', null, global);
goog.exportSymbol('proto.services.PlanListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.Payment.displayName = 'proto.services.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.Order.displayName = 'proto.services.Order';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.Plan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.Plan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.Plan.displayName = 'proto.services.Plan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PlanListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PlanListRequest.repeatedFields_, null);
};
goog.inherits(proto.services.PlanListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PlanListRequest.displayName = 'proto.services.PlanListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.OrderListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.OrderListRequest.repeatedFields_, null);
};
goog.inherits(proto.services.OrderListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.OrderListRequest.displayName = 'proto.services.OrderListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.OrderFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.OrderFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.OrderFilterRequest.displayName = 'proto.services.OrderFilterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.OrderListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.OrderListResponse.repeatedFields_, null);
};
goog.inherits(proto.services.OrderListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.OrderListResponse.displayName = 'proto.services.OrderListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PlanListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.PlanListResponse.repeatedFields_, null);
};
goog.inherits(proto.services.PlanListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PlanListResponse.displayName = 'proto.services.PlanListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.services.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderIdentity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    payUnion: jspb.Message.getFieldWithDefault(msg, 7, ""),
    price: jspb.Message.getFieldWithDefault(msg, 8, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 9, ""),
    detail: jspb.Message.getFieldWithDefault(msg, 10, ""),
    address: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.Payment}
 */
proto.services.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.Payment;
  return proto.services.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.Payment}
 */
proto.services.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayUnion(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetail(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPayUnion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDetail();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string order_identity = 1;
 * @return {string}
 */
proto.services.Payment.prototype.getOrderIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setOrderIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.Payment.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 type = 3;
 * @return {number}
 */
proto.services.Payment.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string channel = 4;
 * @return {string}
 */
proto.services.Payment.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 create_time = 5;
 * @return {number}
 */
proto.services.Payment.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 status = 6;
 * @return {number}
 */
proto.services.Payment.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string pay_union = 7;
 * @return {string}
 */
proto.services.Payment.prototype.getPayUnion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setPayUnion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 price = 8;
 * @return {number}
 */
proto.services.Payment.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string currency = 9;
 * @return {string}
 */
proto.services.Payment.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string detail = 10;
 * @return {string}
 */
proto.services.Payment.prototype.getDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string address = 11;
 * @return {string}
 */
proto.services.Payment.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Payment} returns this
 */
proto.services.Payment.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.services.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planIdentity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    payType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    refreshTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ext: jspb.Message.getFieldWithDefault(msg, 9, ""),
    expireTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    createAddress: jspb.Message.getFieldWithDefault(msg, 11, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    price: jspb.Message.getFieldWithDefault(msg, 13, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 14, ""),
    completeTime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    planDescription: jspb.Message.getFieldWithDefault(msg, 16, ""),
    info: jspb.Message.getFieldWithDefault(msg, 17, ""),
    intent: jspb.Message.getFieldWithDefault(msg, 18, ""),
    periodType: jspb.Message.getFieldWithDefault(msg, 19, 0),
    secret: jspb.Message.getFieldWithDefault(msg, 20, ""),
    planValue: jspb.Message.getFieldWithDefault(msg, 21, 0),
    payChannel: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.Order}
 */
proto.services.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.Order;
  return proto.services.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.Order}
 */
proto.services.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlanIdentity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlanType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPayType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefreshTime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setExt(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireTime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateAddress(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompleteTime(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanDescription(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntent(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeriodType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlanValue(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPlanIdentity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanType();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPayType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getRefreshTime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getExt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExpireTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getCreateAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCompleteTime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getPlanDescription();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getIntent();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPeriodType();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPlanValue();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getPayChannel();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.Order.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.Order.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 plan_identity = 3;
 * @return {number}
 */
proto.services.Order.prototype.getPlanIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPlanIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 plan_type = 4;
 * @return {number}
 */
proto.services.Order.prototype.getPlanType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPlanType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pay_type = 5;
 * @return {number}
 */
proto.services.Order.prototype.getPayType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPayType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 status = 6;
 * @return {number}
 */
proto.services.Order.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 create_time = 7;
 * @return {number}
 */
proto.services.Order.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 refresh_time = 8;
 * @return {number}
 */
proto.services.Order.prototype.getRefreshTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setRefreshTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string ext = 9;
 * @return {string}
 */
proto.services.Order.prototype.getExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setExt = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 expire_time = 10;
 * @return {number}
 */
proto.services.Order.prototype.getExpireTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setExpireTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string create_address = 11;
 * @return {string}
 */
proto.services.Order.prototype.getCreateAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setCreateAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 amount = 12;
 * @return {number}
 */
proto.services.Order.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 price = 13;
 * @return {number}
 */
proto.services.Order.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string currency = 14;
 * @return {string}
 */
proto.services.Order.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int64 complete_time = 15;
 * @return {number}
 */
proto.services.Order.prototype.getCompleteTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setCompleteTime = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string plan_description = 16;
 * @return {string}
 */
proto.services.Order.prototype.getPlanDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPlanDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string info = 17;
 * @return {string}
 */
proto.services.Order.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string intent = 18;
 * @return {string}
 */
proto.services.Order.prototype.getIntent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setIntent = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 period_type = 19;
 * @return {number}
 */
proto.services.Order.prototype.getPeriodType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPeriodType = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string secret = 20;
 * @return {string}
 */
proto.services.Order.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 plan_value = 21;
 * @return {number}
 */
proto.services.Order.prototype.getPlanValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPlanValue = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string pay_channel = 22;
 * @return {string}
 */
proto.services.Order.prototype.getPayChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Order} returns this
 */
proto.services.Order.prototype.setPayChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.Plan.prototype.toObject = function(opt_includeInstance) {
  return proto.services.Plan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.Plan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Plan.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    periodType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    supportedPayType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    price: jspb.Message.getFieldWithDefault(msg, 5, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    info: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    value: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.Plan}
 */
proto.services.Plan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.Plan;
  return proto.services.Plan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.Plan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.Plan}
 */
proto.services.Plan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeriodType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupportedPayType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.Plan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.Plan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.Plan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.Plan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPeriodType();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSupportedPayType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional int64 identity = 1;
 * @return {number}
 */
proto.services.Plan.prototype.getIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 type = 2;
 * @return {number}
 */
proto.services.Plan.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 period_type = 3;
 * @return {number}
 */
proto.services.Plan.prototype.getPeriodType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setPeriodType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string supported_pay_type = 4;
 * @return {string}
 */
proto.services.Plan.prototype.getSupportedPayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setSupportedPayType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 price = 5;
 * @return {number}
 */
proto.services.Plan.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.services.Plan.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string info = 7;
 * @return {string}
 */
proto.services.Plan.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.services.Plan.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 value = 9;
 * @return {number}
 */
proto.services.Plan.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.Plan} returns this
 */
proto.services.Plan.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.PlanListRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PlanListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PlanListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PlanListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PlanListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    common_common_entity_pb.OrderByRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PlanListRequest}
 */
proto.services.PlanListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PlanListRequest;
  return proto.services.PlanListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PlanListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PlanListRequest}
 */
proto.services.PlanListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new common_common_entity_pb.OrderByRequest;
      reader.readMessage(value,common_common_entity_pb.OrderByRequest.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PlanListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PlanListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PlanListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PlanListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_common_entity_pb.OrderByRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OrderByRequest order_by = 5;
 * @return {!Array<!proto.services.OrderByRequest>}
 */
proto.services.PlanListRequest.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.services.OrderByRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_common_entity_pb.OrderByRequest, 5));
};


/**
 * @param {!Array<!proto.services.OrderByRequest>} value
 * @return {!proto.services.PlanListRequest} returns this
*/
proto.services.PlanListRequest.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.services.OrderByRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.OrderByRequest}
 */
proto.services.PlanListRequest.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.services.OrderByRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.PlanListRequest} returns this
 */
proto.services.PlanListRequest.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.OrderListRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.OrderListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.OrderListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.OrderListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userIdentity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    listInfo: (f = msg.getListInfo()) && common_common_entity_pb.ListInfo.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    common_common_entity_pb.OrderByRequest.toObject, includeInstance),
    filter: (f = msg.getFilter()) && proto.services.OrderFilterRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.OrderListRequest}
 */
proto.services.OrderListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.OrderListRequest;
  return proto.services.OrderListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.OrderListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.OrderListRequest}
 */
proto.services.OrderListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIdentity(value);
      break;
    case 4:
      var value = new common_common_entity_pb.ListInfo;
      reader.readMessage(value,common_common_entity_pb.ListInfo.deserializeBinaryFromReader);
      msg.setListInfo(value);
      break;
    case 5:
      var value = new common_common_entity_pb.OrderByRequest;
      reader.readMessage(value,common_common_entity_pb.OrderByRequest.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    case 6:
      var value = new proto.services.OrderFilterRequest;
      reader.readMessage(value,proto.services.OrderFilterRequest.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.OrderListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.OrderListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.OrderListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserIdentity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getListInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_entity_pb.ListInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_common_entity_pb.OrderByRequest.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.services.OrderFilterRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 user_identity = 2;
 * @return {number}
 */
proto.services.OrderListRequest.prototype.getUserIdentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.OrderListRequest} returns this
 */
proto.services.OrderListRequest.prototype.setUserIdentity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ListInfo list_info = 4;
 * @return {?proto.services.ListInfo}
 */
proto.services.OrderListRequest.prototype.getListInfo = function() {
  return /** @type{?proto.services.ListInfo} */ (
    jspb.Message.getWrapperField(this, common_common_entity_pb.ListInfo, 4));
};


/**
 * @param {?proto.services.ListInfo|undefined} value
 * @return {!proto.services.OrderListRequest} returns this
*/
proto.services.OrderListRequest.prototype.setListInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.OrderListRequest} returns this
 */
proto.services.OrderListRequest.prototype.clearListInfo = function() {
  return this.setListInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.OrderListRequest.prototype.hasListInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated OrderByRequest order_by = 5;
 * @return {!Array<!proto.services.OrderByRequest>}
 */
proto.services.OrderListRequest.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.services.OrderByRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_common_entity_pb.OrderByRequest, 5));
};


/**
 * @param {!Array<!proto.services.OrderByRequest>} value
 * @return {!proto.services.OrderListRequest} returns this
*/
proto.services.OrderListRequest.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.services.OrderByRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.OrderByRequest}
 */
proto.services.OrderListRequest.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.services.OrderByRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.OrderListRequest} returns this
 */
proto.services.OrderListRequest.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};


/**
 * optional OrderFilterRequest filter = 6;
 * @return {?proto.services.OrderFilterRequest}
 */
proto.services.OrderListRequest.prototype.getFilter = function() {
  return /** @type{?proto.services.OrderFilterRequest} */ (
    jspb.Message.getWrapperField(this, proto.services.OrderFilterRequest, 6));
};


/**
 * @param {?proto.services.OrderFilterRequest|undefined} value
 * @return {!proto.services.OrderListRequest} returns this
*/
proto.services.OrderListRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.OrderListRequest} returns this
 */
proto.services.OrderListRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.OrderListRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.OrderFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.OrderFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.OrderFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    planType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    path: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.OrderFilterRequest}
 */
proto.services.OrderFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.OrderFilterRequest;
  return proto.services.OrderFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.OrderFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.OrderFilterRequest}
 */
proto.services.OrderFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlanType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.OrderFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.OrderFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.OrderFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlanType();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.services.OrderFilterRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.OrderFilterRequest} returns this
 */
proto.services.OrderFilterRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 plan_type = 2;
 * @return {number}
 */
proto.services.OrderFilterRequest.prototype.getPlanType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.OrderFilterRequest} returns this
 */
proto.services.OrderFilterRequest.prototype.setPlanType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.services.OrderFilterRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.OrderFilterRequest} returns this
 */
proto.services.OrderFilterRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.OrderListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.OrderListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.OrderListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.OrderListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.OrderListResponse}
 */
proto.services.OrderListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.OrderListResponse;
  return proto.services.OrderListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.OrderListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.OrderListResponse}
 */
proto.services.OrderListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.Order;
      reader.readMessage(value,proto.services.Order.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.OrderListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.OrderListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.OrderListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.OrderListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.Order.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order data = 1;
 * @return {!Array<!proto.services.Order>}
 */
proto.services.OrderListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.Order, 1));
};


/**
 * @param {!Array<!proto.services.Order>} value
 * @return {!proto.services.OrderListResponse} returns this
*/
proto.services.OrderListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.Order}
 */
proto.services.OrderListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.OrderListResponse} returns this
 */
proto.services.OrderListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.PlanListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PlanListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PlanListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PlanListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PlanListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.services.Plan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PlanListResponse}
 */
proto.services.PlanListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PlanListResponse;
  return proto.services.PlanListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PlanListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PlanListResponse}
 */
proto.services.PlanListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.Plan;
      reader.readMessage(value,proto.services.Plan.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PlanListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PlanListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PlanListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PlanListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.Plan.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Plan data = 1;
 * @return {!Array<!proto.services.Plan>}
 */
proto.services.PlanListResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.services.Plan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.Plan, 1));
};


/**
 * @param {!Array<!proto.services.Plan>} value
 * @return {!proto.services.PlanListResponse} returns this
*/
proto.services.PlanListResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.Plan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.Plan}
 */
proto.services.PlanListResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.Plan, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.PlanListResponse} returns this
 */
proto.services.PlanListResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


goog.object.extend(exports, proto.services);
